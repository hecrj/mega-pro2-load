ALGORITMO DE SELECCIÓN DE RUTA DE DESCARGA

struct Nodo {
	int id;
	int vel;
};

Ruta encontrar_ruta(const Peticion &p) const
{
	Pelicula peli = p.consultar_pelicula();
	queue<Nodo> servidores;

	Nodo main_serv;
	main_serv.id = main_serv_id;
	main_serv.vel = serv[main_serv_id].consultar_velocidad();
	
	servidores.push(main_serv);

	ServNodo serv_nodo;
	serv_nodo.id = 0;
	serv_nodo.vel = 0;

	while(not servidores.empty())
	{
		Nodo serv = servidores.front();
		servidores.pop();

		if(servers[serv.id].esta_libre() and servers[serv.id].tiene_pelicula(peli))
		{
			serv.vel += servers[serv_id].consultar_velocidad();

			if(peli.consultar_peso() / serv.vel <= 1)
				return construir_ruta(serv.id);

			else if(serv_vel > serv_nodo.velocidad())
				serv_nodo = serv;
		}

		if(servers[serv.id].tiene_hijos())
		{
			int s1, s2;
			servers[serv.id].hijos(s1, s2);

			Nodo serv_hijo;
			serv_hijo.id = s1;
			serv_hijo.vel = serv.vel;

			servidores.push(serv_hijo);

			if(s2 != 0)
			{
				serv_hijo.id = s2;
				servidores.push(serv_hijo);
			}
		}

	}

	return construir_ruta(serv_nodo.id);
}

// Hmmm... Me parece que la mejor solución será recorrer el arbol de servidores en amplitud...
